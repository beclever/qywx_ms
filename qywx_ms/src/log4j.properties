#设置级别和目的地(使用warn级别来记录)
log4j.rootLogger=info,console,warnAppender,error
#输出到控制台
log4j.appender.console=org.apache.log4j.ConsoleAppender
#设置输出样式
log4j.appender.console.layout=org.apache.log4j.PatternLayout
#自定义样式
# %r 程序启动到现在的毫秒数
# %d  日期和时间 常用日期格式 %d{DATE}, %d{ABSOLUTE}, %d{HH:mm:ss,SSS}, %d{ddMMyyyy HH:mm:ss,SSS}。。。
# %t 方法名 main
# %p 优先级 DEBUG/INFO/ERROR
# %c 所属类的全名(包括包名)
# %l 发生的位置，在某个类的某行
# %m 输出代码中指定的讯息，如log(message)中的message
# %n 输出一个换行
log4j.appender.console.layout.ConversionPattern=[%p] [%d{yyyyMMdd HH:mm:ss}] -%m %l %n

#按照级别输出到不同的文件
#log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
log4j.appender.info=com.grgbanking.common.utils.MyLogAppender
log4j.appender.info.layout=org.apache.log4j.PatternLayout
log4j.appender.info.layout.ConversionPattern=[%-5p] [%d{yyyyMMdd HH:mm:ss}] %c - %m%n
log4j.appender.info.datePattern='.'yyyy-MM-dd
log4j.appender.info.Threshold=INFO 
log4j.appender.info.append=true
log4j.appender.info.File=${catalina.home}/logs/qywx_ms_info.log

#log4j.appender.debug=org.apache.log4j.DailyRollingFileAppender
log4j.appender.debug=com.grgbanking.common.utils.MyLogAppender
log4j.appender.debug.layout=org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern=[%-5p] [%d{yyyyMMdd HH:mm:ss}] %c - %m%n
log4j.appender.debug.datePattern='.'yyyy-MM-dd
log4j.appender.debug.Threshold=DEBUG 
log4j.appender.debug.append=true
log4j.appender.debug.File=${catalina.home}/logs/qywx_ms_debug.log

#log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
log4j.appender.error=com.grgbanking.common.utils.MyLogAppender
log4j.appender.error.layout=org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern=[%-5p] [%d{yyyyMMdd HH:mm:ss}] %c - %m%n
log4j.appender.error.datePattern='.'yyyy-MM-dd
log4j.appender.error.Threshold=ERROR 
log4j.appender.error.append=true
log4j.appender.error.File=${catalina.home}/logs/qywx_ms_error.log 

log4j.appender.warnAppender=com.grgbanking.common.utils.MyLogAppender
log4j.appender.warnAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.warnAppender.layout.ConversionPattern=[%-5p] [%-d{yyyy-MM-dd HH:mm:ss}] %c - %m%n
log4j.appender.warnAppender.datePattern='.'yyyy-MM-dd
log4j.appender.warnAppender.Threshold=warn 
log4j.appender.warnAppender.append=true
log4j.appender.warnAppender.File=${catalina.home}/logs/qywx_ms_warn_cost_time.log

#调用接口日志(使用warn级别来记录)
#log4j.logger.com.grgbanking.core.controller.BaseController=warn,warnAppender
#log4j.logger.com.grgbanking.core.controller.workorder.WorkOrderController=warn,warnAppender



#屏蔽SSH框架的部分日志输出
log4j.logger.org.springframework=OFF
log4j.logger.org.apache.struts2=OFF
log4j.logger.com.opensymphony.xwork2=OFF
log4j.logger.org.hibernate=OFF
log4j.logger.org.apache.catalina=OFF

##输出到文件(这里默认为追加方式)
#log4j.appender.appender2=org.apache.log4j.RollingFileAppender
##设置文件输出路径
#log4j.appender.appender2.File=error.log
##设置级别
#log4j.appender.error.Threshold = ERROR
##设置文件输出样式
#log4j.appender.appender2.layout=org.apache.log4j.TTCCLayout
##当文件达到1MB,自动滚动原来的内容移到error.log.1文件
#log4j.appender.R.MaxFileSize=1MB
##可以产生的最大文件数
#log4j.appender.R.MaxBackupIndex=100

